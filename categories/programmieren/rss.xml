<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmieren on Michael im Netz</title>
    <link>http://localhost:1313/categories/programmieren/</link>
    <description>Recent content in Programmieren on Michael im Netz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language>
    <copyright>Diese Seite ist unter der &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt; lizenziert.</copyright>
    <lastBuildDate>Thu, 26 Feb 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/programmieren/rss/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>go in 6 Schritten installieren</title>
      <link>http://localhost:1313/post/2015/02/go-in-6-schritten-installieren/</link>
      <pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2015/02/go-in-6-schritten-installieren/</guid>
      <description>

&lt;p&gt;Die Installation von &lt;a href=&#34;https://golang.org/&#34;&gt;go&lt;/a&gt; kann etwas tricky bei Debian und Ubuntu sein. Da die Versionen im Repository
veraltet sind. Manchmal ist es auch nötig mehrere Versionen der Programmierspache go parallel zu installieren.
Das ist mit Bordmitteln fast unmöglich.&lt;/p&gt;

&lt;p&gt;Für diese Probleme gibt es Abhilfe: Den go Versionsmanager &lt;a href=&#34;https://github.com/moovweb/gvm&#34;&gt;gvm&lt;/a&gt;. Ich gebe zu, dass das ganze etwas von einem
Rüttelskript hat, aber es funktioniert und ist nach meinen Wissen der einfachste Weg &lt;code&gt;go&lt;/code&gt; zu installieren&lt;/p&gt;

&lt;h3 id=&#34;1-voraussetzungen:68e336974a9292a1000070f844d9d073&#34;&gt;1. Voraussetzungen&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt-get install curl git mercurial make binutils bison gcc build-essential
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Damit installiert man die Voraussetzungen, um &lt;code&gt;go&lt;/code&gt; compilieren zu können.&lt;/p&gt;

&lt;h3 id=&#34;2-clone-das-repo-in-dein-home:68e336974a9292a1000070f844d9d073&#34;&gt;2. clone das Repo in Dein home&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bash &amp;lt; &amp;lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Diese Komandozeile lädt mit &lt;a href=&#34;http://curl.haxx.se/&#34;&gt;curl&lt;/a&gt; ein Skript herunter und lässt es von der &lt;a href=&#34;http://www.gnu.org/software/bash/&#34;&gt;bash&lt;/a&gt; ausführen. Dabei
der Inhalt vom git-Repository nach &lt;code&gt;~/.gvm&lt;/code&gt; kopiert&lt;/p&gt;

&lt;h3 id=&#34;3-gvm-in-der-shell-verfügbar-machen:68e336974a9292a1000070f844d9d073&#34;&gt;3. gvm in der shell verfügbar machen&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;[[ -s &amp;quot;$HOME/.gvm/scripts/gvm&amp;quot; ]] &amp;amp;&amp;amp; source &amp;quot;$HOME/.gvm/scripts/gvm&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Die Zeile muss man in seine &lt;code&gt;~/.bashrc&lt;/code&gt; bzw. &lt;code&gt;~/.zshrc&lt;/code&gt; einfügen, damit die Umgebungsvariablen und Komandos
von gvm in der jeweiligen shell verfügbar sind. Nach Änderung ist es nötig eine neue Shell zu öffnen oder man
führt das Komando noch einmal in der aktuellen Shell aus.&lt;/p&gt;

&lt;h3 id=&#34;4-nachsehen-ob-gvm-installiert-ist:68e336974a9292a1000070f844d9d073&#34;&gt;4. nachsehen, ob gvm installiert ist&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gvm version
Go Version Manager v1.0.22 installed at /home/rennecke/.gvm
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-go-golang-installieren:68e336974a9292a1000070f844d9d073&#34;&gt;5. go (golang) installieren&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gvm listall

gvm gos (available` sh
...
   go1.4
   go1.4.1
   go1.4.2
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Man sieht alle Versionen von &lt;code&gt;go&lt;/code&gt; So installiert man eine spezifische &lt;code&gt;go&lt;/code&gt; Version, z.B. 1.4.2.
&lt;em&gt;Installieren&lt;/em&gt; ist eigentlich der falsche Ausdruck, denn der neue go-Compiler wird compiliert,
d.h. es werden &lt;strong&gt;keine&lt;/strong&gt; Binärpakete heruntergeladen.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gvm install go1.4.2
Downloading Go source...
Installing go1.4...
* Compiling...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-gvm-mitteilen-welche-version-von-go-man-nutzen-möchte:68e336974a9292a1000070f844d9d073&#34;&gt;6. gvm mitteilen, welche Version von go man nutzen möchte&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gvm use go1.4.2
Now using version go1.4.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nun kann noch nachsehen, welche Version &lt;code&gt;go&lt;/code&gt; hat.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ go version
go version go1.4.2 linux/amd64
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>rrdtool und json</title>
      <link>http://localhost:1313/post/2014/10/rrdtool-und-json/</link>
      <pubDate>Tue, 28 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2014/10/rrdtool-und-json/</guid>
      <description>&lt;p&gt;In den letzten beiden Beiträgen habe ich erklärt, wie man den &lt;a href=&#34;http://localhost:1313/post/2014/10/dht22-am-raspberry-pi/&#34;&gt;DTH22&lt;/a&gt; bzw. &lt;a href=&#34;http://localhost:1313/post/2014/10/bmp085-am-raspberry-pi/&#34;&gt;BMP085&lt;/a&gt; am
Raspberry Pi betreibt. Es liegt nahe die Sensordaten aufzuzeichnen und zu
visualisieren. In einen kleinen Prototyp habe ich die Daten mit &lt;a href=&#34;http://oss.oetiker.ch/rrdtool/&#34;&gt;RRDtool&lt;/a&gt; gespeichert und mit &lt;a href=&#34;http://www.highcharts.com/&#34;&gt;Highcharts&lt;/a&gt;
angezeigt.&lt;/p&gt;

&lt;p&gt;Meine Idee war, dass ich aus der RRD-Datenbank einige Daten zu json konvertiere, um sie dann
mit Highcharts anzuzeigen. Die json-Daten wollte ich mit einem ajax-Request nachladen. Da ich
so gut wie keine JavaScript- und JQuerry-Kenntnisse habe, habe ich sehr lange vergeblich
probiert einen Graph zu zeichnen. Als ich das von RRDtool generierte &amp;ldquo;json&amp;rdquo; mir angesehen
habe, ist mir aufgefallen, dass es kein valides json ist&amp;hellip;&lt;/p&gt;

&lt;p&gt;Weil ich noch ein Erfolgserlebnis haben wollte, bin ich auf den validen xml-Export von
RRDtool umgestiegen. Danach hat der Prototyp funktioniert.&lt;/p&gt;

&lt;p&gt;Nach etwas Recherche im Netz, bin ich auch auf ein &lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=686825&#34;&gt;Bug-Ticket&lt;/a&gt; gestoßen, welches den kaputten
json-Export anspricht.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BMP085 am Raspberry Pi</title>
      <link>http://localhost:1313/post/2014/10/bmp085-am-raspberry-pi/</link>
      <pubDate>Fri, 17 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2014/10/bmp085-am-raspberry-pi/</guid>
      <description>

&lt;h2 id=&#34;was-kann-der-bmp085:bf8a41dd39999e1a61e9724b1f94c2f6&#34;&gt;Was kann der BMP085?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Kosten: 8 - 12€&lt;/li&gt;
&lt;li&gt;1,8 - 3,6V Eingangsspannung&lt;/li&gt;
&lt;li&gt;Stromverbrauch

&lt;ul&gt;
&lt;li&gt;3 µA (ultra-low power mode, 1Hz Samplingrate)&lt;/li&gt;
&lt;li&gt;32 µA (advanced power mode, 1Hz Samplingrate)&lt;/li&gt;
&lt;li&gt;0.1 μA Standby&lt;/li&gt;
&lt;li&gt;max. 650 μA in der Spitze&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Temperaturbereich: -40 bis 85°C&lt;/li&gt;
&lt;li&gt;Luftdruck: 300 bis 1100 hPa&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;aufbau:bf8a41dd39999e1a61e9724b1f94c2f6&#34;&gt;Aufbau&lt;/h2&gt;

&lt;p&gt;Der BMP085 ist ganz einfach am Raspberry Pi zu betreiben, da man ihn über
den &lt;a href=&#34;http://de.wikipedia.org/wiki/I%C2%B2C&#34;&gt;I²C-Bus&lt;/a&gt; anspricht. Beim Anschließen muss man aber aufpassen, da die
verschiedenen Hersteller verschiedene Pin-Belegungen haben. Die Belegung
steht auf der Vorder- oder Rückseite der Platine. Es gibt auch Sensoren,
bei denen man die Pins noch anlöten muss.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost:1313/bmp085_pi.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Steckbrett mit BMP085 und Raspberry Pi&#34;&gt;&lt;img src=&#34;http://localhost:1313/bmp085_pi-thumbnail.png&#34; alt=&#34;Steckbrett mit BMP085 und Raspberry Pi&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An den roten Leitungen liegen 3,3V an, die schwarzen Leitungen liegen auf Masse.
Die orange und violette Leitung sind der I²C-Bus, wobei
orange SDA (Serial Data) und violett SCL (Serial Clock) ist. &lt;a href=&#34;http://www.timmermann.org/ralph/index.htm?http://www.ralph.timmermann.org/elektronik/i2c.htm&#34;&gt;Hier&lt;/a&gt; findet man ein
paar mehr technische Informationen zum I²C-Bus&lt;/p&gt;

&lt;h2 id=&#34;programmierung:bf8a41dd39999e1a61e9724b1f94c2f6&#34;&gt;Programmierung&lt;/h2&gt;

&lt;h3 id=&#34;betriebssystem-vorbereiten:bf8a41dd39999e1a61e9724b1f94c2f6&#34;&gt;Betriebssystem vorbereiten&lt;/h3&gt;

&lt;p&gt;Um den I²C-Bus ansprechen zu können, muss man 2 Kernel-Module laden und ein paar Pakete
installieren. Unter Raspbian und Debian ist alles in den Standard-Paketquellen verfügbar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt-get update
sudo apt-get install build-essential python-dev python-smbus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nun kümmern wir uns um die Kernelmodule. Bei &lt;a href=&#34;http://www.raspbian.org/&#34;&gt;Raspbian&lt;/a&gt; muss man die die Module
noch in der Datei &lt;code&gt;/etc/modprobe.d/raspi-blacklist.conf&lt;/code&gt; mit einer Raute &lt;code&gt;#&lt;/code&gt;
am Zeilenanfang auskommentieren. Dazu muss man &lt;code&gt;root&lt;/code&gt; oder den Editor mit &lt;code&gt;sudo&lt;/code&gt;
starten.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo su -
echo &amp;quot;i2c-dev&amp;quot; &amp;gt;&amp;gt; /etc/modules
echo &amp;quot;i2c_bcm2708&amp;quot; &amp;gt;&amp;gt; /etc/modules
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Damit man bequem auf den Sensor zugreifen kann, sollte man auch gleich die passende
Python-Bibliothek von Adafruit installieren.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/adafruit/Adafruit_Python_BMP
cd Adafruit_Python_BMP
sudo python setup.py install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Es gibt auch hier im &lt;code&gt;examples&lt;/code&gt;-Verzeichnis einige Beispiele.&lt;/p&gt;

&lt;h3 id=&#34;minimalbeispiel:bf8a41dd39999e1a61e9724b1f94c2f6&#34;&gt;Minimalbeispiel&lt;/h3&gt;

&lt;p&gt;Das kleine Python-Programm muss als &lt;code&gt;root&lt;/code&gt; bzw. mit &lt;code&gt;sudo&lt;/code&gt; ausgeführt werden.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/python
# -*- coding: utf-8 -*-
#

import Adafruit_BMP.BMP085 as BMP085

bmp085 = BMP085.BMP085()

# Read the current temperature
temp   = bmp085.read_temperature()

# Read the current barometric pressure level
pressure = bmp085.read_pressure()

# calculate hPa
pressure = pressure / 100.0

print &amp;quot;Temperature:  {:8.2f} °C&amp;quot;.format(temp)
print &amp;quot;Pressure:     {:8.2f} hPa&amp;quot;.format(pressure)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Man kann auch mit Hilfe der &lt;a href=&#34;https://github.com/adafruit/Adafruit_Python_BMP&#34;&gt;Bibliothek&lt;/a&gt; die &lt;a href=&#34;http://de.wikipedia.org/wiki/Barometrische_H%C3%B6henformel&#34;&gt;Höhe barometrisch&lt;/a&gt; bestimmen und auch den Luftdruck
auf Meereshöhe. Nur der Luftdruck auf Meereshöhe ist zwischen Wetterstationen vergleichbar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DHT22 am Raspberry Pi</title>
      <link>http://localhost:1313/post/2014/10/dht22-am-raspberry-pi/</link>
      <pubDate>Tue, 14 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2014/10/dht22-am-raspberry-pi/</guid>
      <description>

&lt;h2 id=&#34;was-kann-der-dht22:8d8edce1009994bb6e78cdf6135bcafc&#34;&gt;Was kann der DHT22?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;kostet zwischen 6€ und 9€&lt;/li&gt;
&lt;li&gt;3,3 - 5V Eingangsspannung&lt;/li&gt;
&lt;li&gt;max. 2.5 mA (während der Datenübertragung)&lt;/li&gt;
&lt;li&gt;40-50 µA Standby-Strom&lt;/li&gt;
&lt;li&gt;Luftfeuchtigkeit: 0 bis 100% relative Luftfeuchtigkeit mit ±2% Genauigkeit&lt;/li&gt;
&lt;li&gt;Temperaturbereich: -40 bis 80°C ± 0,5°C&lt;/li&gt;
&lt;li&gt;Sampling Rate: max. 0,5Hz (eine Messung in 2 Sekunden)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;aufbau:8d8edce1009994bb6e78cdf6135bcafc&#34;&gt;Aufbau&lt;/h2&gt;

&lt;p&gt;Um den DHT22 am Raspberry Pi zu betreiben ist noch ein &lt;a href=&#34;http://www.elektronik-kompendium.de/public/schaerer/pullr.htm&#34;&gt;Pullup-Widerstand&lt;/a&gt; von 4,7 bis 10kΩ nötig.
Dieser wird zwischen Datenleitung und der 3,3V Spannungsversorgung geschaltet. Man darf den Sensor
nur mit 3,3V Spannung versorgen, da die Logik des Raspberry Pi nur 3,3V verträgt.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost:1313/dht22_pi.png&#34; title=&#34;&#34; data-lightbox=&#34;set1&#34; data-title=&#34;Steckbrett mit DHT22 und Raspberry Pi&#34;&gt;&lt;img src=&#34;http://localhost:1313/dht22_pi-thumbnail.png&#34; alt=&#34;Steckbrett mit DHT22 und Raspberry Pi&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Die roten Leitungen liegen auf 3,3V, die schwarzen Leitungen liegen auf Masse und die weiße Leitung ist die Datenleitung. Man kann den
DHT22 an jedem GPIO-Pin betreiben, hier wird er an Pin GPIO 4 des Raspberry Pi betrieben.&lt;/p&gt;

&lt;h3 id=&#34;belegung-dht22:8d8edce1009994bb6e78cdf6135bcafc&#34;&gt;Belegung DHT22&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Pin 1: 3,3V&lt;/li&gt;
&lt;li&gt;Pin 2: Daten&lt;/li&gt;
&lt;li&gt;Pin 3: frei&lt;/li&gt;
&lt;li&gt;Pin 4: Masse&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;programmierung:8d8edce1009994bb6e78cdf6135bcafc&#34;&gt;Programmierung&lt;/h2&gt;

&lt;p&gt;Es gibt von Adafruit eine Python-&lt;a href=&#34;https://github.com/adafruit/Adafruit_Python_DHT.git&#34;&gt;Bibliothek&lt;/a&gt;, welche sehr einfach zu nutzen ist, um den Sensor
abzufragen.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt-get update
sudo apt-get install build-essential python-dev
git clone https://github.com/adafruit/Adafruit_Python_DHT.git
cd Adafruit_Python_DHT
sudo python setup.py install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Im &lt;code&gt;examples&lt;/code&gt; Verzeichnis findet man ein paar Beispiele. Der folgende Code ist
ein funktionierendes Minimalbeispiel, welches man einfach erweitern kann. Man muss
bedenken, dass der Code als &lt;code&gt;root&lt;/code&gt; bzw. mit &lt;code&gt;sudo&lt;/code&gt; ausgeführt werden, da man
direkt auf die Hardware des Raspberry Pi zugreift. &lt;a href=&#34;http://pi.gadgetoid.com/pinout&#34;&gt;Hier&lt;/a&gt; findet man Nummerierung
der Pins.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/python
# -*- coding: utf-8 -*-
#

import Adafruit_DHT

# GPIO pin for DTH-22
# see http://pi.gadgetoid.com/pinout
pin = 4

# Try to grab a sensor reading.  Use the read_retry method which will retry up
# to 15 times to get a sensor reading (waiting 2 seconds between each retry).
humidity, temperature = Adafruit_DHT.read_retry(Adafruit_DHT.DHT22, pin)

if humidity is None or temperature is None:
    print &#39;Failed to get reading DTH-22. Try again!&#39;
else:
    print &amp;quot;Temperature: %8.2f°C&amp;quot; % temperature
    print &amp;quot;Humidity:    %8.2f%%&amp;quot; % humidity
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Briefvorlage mit LaTeX</title>
      <link>http://localhost:1313/post/2011/07/briefvorlage-mit-latex/</link>
      <pubDate>Sat, 30 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2011/07/briefvorlage-mit-latex/</guid>
      <description>

&lt;p&gt;Ich bin vor kurzem umgezogen und bin inzwischen Besitzer eines Festnetztelefon.
Aus diesem Grund wollte ich in meiner $$ \LaTeX $$-Vorlage für meine Briefe beide Nummern stehen haben.
Die &lt;a href=&#34;http://developer.berlios.de/projects/koma-script3/&#34;&gt;KOMA-Skript&lt;/a&gt; Pakete können von Haus aus, nur eine
Telefonnummer, deswegen habe ich meine Vorlage, welche ich von &lt;a href=&#34;http://meet-unix.org/&#34;&gt;meet-unix&lt;/a&gt; habe, wie folgt angepasst.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\ProvidesFile{letter_options.lco}[letter-class-option file]

% symbols: (cell)phone, email
\RequirePackage{marvosym}
% for gray color in header
\RequirePackage{color}
\RequirePackage[utf8]{inputenc}

\KOMAoptions{
foldmarks=true,
foldmarks=BlmTP,
%fromurl=true,
fromemail=true,
fromphone=true,
fromalign=right,
fromrule=aftername,
fromemail=true,
footsepline=off
}

% define gray for header
\definecolor{firstnamecolor}{rgb}{0.65,0.65,0.65}
\definecolor{familynamecolor}{rgb}{0.45,0.45,0.45}

\setkomavar{fromname}{\color{firstnamecolor}Michael\color{familynamecolor}Rennecke}
\setkomafont{fromname}{\fontsize{38}{40}\sffamily\mdseries\upshape}

\setkomafont{fromrule}{\color{firstnamecolor}}
\@setplength{fromrulethickness}{0.25ex}

\setkomafont{addressee}{\small}
\setkomavar{fromaddress}{Solarisgasse 2\12345 Tuxhausen}

\newkomavar[\Mobilefone]{frommobilephone} 
\setkomavar{frommobilephone}{(01\,60)~1\,00\,00\,00}
\setkomavar{fromphone}[\Telefon]{(03\,45)~000\,00\,00\,00}

\setkomavar{fromemail}[\Letter]{michael.rennecke@gmail.com}
%\setkomavar{fromurl}[]{http://0rpheus.net}

\firsthead{
  \noindent
  \parbox[b]{\useplength{firstheadwidth}}{
    \noindent%
    \raggedleft%
    {\usekomafont{fromname}\usekomavar{fromname}}\
    \rule{\useplength{firstheadwidth}}{1pt}\
    \usekomavar{fromaddress}\
    \Telefon\enskip\usekomavar{fromphone}\
    \Mobilefone\enskip\usekomavar{frommobilephone}\
    \Letter\enskip\usekomavar{fromemail}
  }
}

\setkomafont{fromaddress}{\small\rmfamily\mdseries\slshape}
\setkomavar{backaddress}{Michael Rennecke, Tuxgasse 5, 06121 Halle (Saale)}
 
\setkomavar{signature}{Michael Rennecke
% signature same indention level as rest
\renewcommand*{\raggedsignature}{\raggedright}
% space for signature
\@setplength{sigbeforevskip}{1.7cm}

\endinput
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;beipieldokument:3fac007e186036068c6cdae2a2ac4984&#34;&gt;Beipieldokument&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\documentclass[letter_options,parskip=half+,version=last,fontsize=11pt,DIV=11,BCOR=10mm, DIN]{scrlttr2}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[english,ngerman]{babel}
\usepackage{amssymb}
\usepackage{lmodern}

% overall sans serif font
\renewcommand{\familydefault}{\sfdefault}

\setkomavar{subject}{Was machst Du}
\setkomavar{place}{Halle (Saale)}

\begin{document}
\begin{letter}{Karl Mustermann\ Straße 4\ 06019 Halle (Saale)}


\opening{Sehr geehrte Damen und Herren,}
  blabla

  \closing{Mit freundlichem Gruß}
\end{letter}

\end{document}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ich hoffe ich konnte allen helfen, die ein ähnliches Problem haben. Ich bin für Anmerkungen dankbar,
die meine Vorlage noch verbessern ;-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>verschlüsselte Volumes bequem mounten</title>
      <link>http://localhost:1313/post/2011/03/verschl%C3%BCsselte-volumes-bequem-mounten/</link>
      <pubDate>Sat, 26 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2011/03/verschl%C3%BCsselte-volumes-bequem-mounten/</guid>
      <description>&lt;p&gt;Ich habe mein home verschlüsselt. Dieses wird automatisch, beim anmelden gemountet.
Da ich in mein home noch ein paar andere verschlüsselte Dateisysteme einhänge funktionieren die Standard-Mittel,
wie &lt;code&gt;/etc/crypttab&lt;/code&gt; nicht. Dabei ergibt sich das folgende Problem: Die Volumes werden beim booten eingehangen
und zu diesen Zeitpunkt existiert mein home noch nicht.&lt;/p&gt;

&lt;p&gt;Da ich &lt;em&gt;faul&lt;/em&gt; bin möchte ich auch möglichst wenig Passwörter eingeben, weiterhin soll meine Freundin
auch den Rechner anmachen können und nicht an meinen Passwort scheitern. Deswegen wird nur mein
home via Passwort entschlüsselt, für die anderen Dateisysteme kommen &lt;em&gt;key-files&lt;/em&gt; zum Einsatz. Diese
liegen in meinen &lt;strong&gt;verschlüsselten&lt;/strong&gt; home.&lt;/p&gt;

&lt;p&gt;Da ich mir selbst nicht vertraue, möchte ich den &lt;a href=&#34;http://linux.die.net/man/8/sudo&#34;&gt;sudo&lt;/a&gt;-Mechanismus
oder &lt;a href=&#34;http://linux.die.net/man/2/setuid&#34;&gt;suid&lt;/a&gt;-Bits nicht benutzten. Deswegen habe ich mir die beiden
Skripte &lt;code&gt;cryptdisks_start&lt;/code&gt; und &lt;code&gt;cryptdisks_stop&lt;/code&gt; genauer angesehen. In einen ersten Schritt habe ich mir eine
&lt;code&gt;/etc/user_crypttab&lt;/code&gt; erzeugt.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;root@walhalla ~ # cat /etc/user_crypttab
# definition             volume                        key                                   options      mountpoint                mountoptions
data--group-video_crypt  /dev/mapper/data--group-video /home/rennecke/key-files/video-key    luks         /home/rennecke/Videos     noatime
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Die ersten vier Parameter entsprechen denen, der &lt;a href=&#34;http://linux.die.net/man/5/crypttab&#34;&gt;crypttab&lt;/a&gt;,
&lt;em&gt;mountpoint&lt;/em&gt; und &lt;em&gt;mountoptions&lt;/em&gt; sind entsprechen den gleichnamigen Optionen von
&lt;a href=&#34;http://linux.die.net/man/8/mount&#34;&gt;mount&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mein &lt;code&gt;user_cryptdisks_start&lt;/code&gt;-Skript sieht wie folgt aus:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/sh

# user_cryptdisks_start - wrapper around cryptsetup which parses
# /etc/user_crypttab, just like mount parses /etc/fstab.

# Initial code stolen from cryptdisks_start by Jon Dowland &amp;lt;jon@alcopop.org&amp;gt;
# Copyright (C) 2011 by Michael Rennecke &amp;lt;michael_rennecke@gmx.net&amp;gt;
# License: GNU General Public License, v2 or any later
# (http://www.gnu.org/copyleft/gpl.html)

CRYPTTAB=&amp;quot;/etc/user_crypttab&amp;quot;

set -e

if [ $# -lt 1 ]; then
	echo &amp;quot;usage: $0 &amp;lt;name&amp;gt;&amp;quot; &amp;gt;&amp;amp;2
	echo &amp;gt;&amp;amp;2
	echo &amp;quot;reads $CRYPTTAB and starts the mapping corresponding to &amp;lt;name&amp;gt;&amp;quot; &amp;gt;&amp;amp;2
	exit 1
fi

. /lib/cryptsetup/cryptdisks.functions

INITSTATE=&amp;quot;manual&amp;quot;
DEFAULT_LOUD=&amp;quot;yes&amp;quot;

if [ -x &amp;quot;/usr/bin/id&amp;quot; ] &amp;amp;&amp;amp; [ &amp;quot;$(/usr/bin/id -u)&amp;quot;  != &amp;quot;0&amp;quot; ]; then
	log_warning_msg &amp;quot;$0 needs root privileges&amp;quot;
	exit 1
fi

log_action_begin_msg &amp;quot;Starting crypto disk&amp;quot;
mount_fs


count=0
tablen=&amp;quot;$(egrep -vc &amp;quot;^[[:space:]]*(#|$)&amp;quot; &amp;quot;$CRYPTTAB&amp;quot;)&amp;quot;
egrep -v &amp;quot;^[[:space:]]*(#|$)&amp;quot; &amp;quot;$CRYPTTAB&amp;quot; | while read dst src key opts mnt mopts; do
	count=$(( $count + 1 ))
	echo &amp;quot;&amp;quot;
	if [ &amp;quot;$1&amp;quot; = &amp;quot;$dst&amp;quot; ]; then
		ret=0
		handle_crypttab_line_start &amp;quot;$dst&amp;quot; &amp;quot;$src&amp;quot; &amp;quot;$key&amp;quot; &amp;quot;$opts&amp;quot; &amp;lt;&amp;amp;3 || ret=$?
		echo &amp;quot;&amp;quot;
		fsck -pv /dev/mapper/$dst
		echo &amp;quot;&amp;quot;
		mount -o $mopts /dev/mapper/$dst $mnt
	elif [ $count -ge $tablen ]; then
		ret=1
		device_msg &amp;quot;$1&amp;quot; &amp;quot;failed, not found in user_crypttab&amp;quot;
	else
		continue
	fi
	umount_fs
	log_action_end_msg $ret
	exit $ret
done 3&amp;lt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Zum Schluss noch mein  &lt;code&gt;user_cryptdisks_stop&lt;/code&gt;-Skript:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/sh

# user_cryptdisks_stop - wrapper around cryptsetup which parses
# /etc/user_crypttab, just like mount parses /etc/fstab.

# Initial code stolen from cryptdisks_stop by Jonas Meurer &amp;lt;jonas@freesources.org&amp;gt;
# Copyright (C) 2011 by Michael Rennecke &amp;lt;michael_rennecke@gmx.net&amp;gt;
# License: GNU General Public License, v2 or any later
# (http://www.gnu.org/copyleft/gpl.html)

CRYPTTAB=/etc/user_crypttab

set -e

if [ $# -lt 1 ]; then
	echo &amp;quot;usage: $0 &amp;lt;name&amp;gt;&amp;quot; &amp;gt;&amp;amp;2
	echo &amp;gt;&amp;amp;2
	echo &amp;quot;reads $CRYPTTAB and stops the mapping corresponding to &amp;lt;name&amp;gt;&amp;quot; &amp;gt;&amp;amp;2
	exit 1
fi

. /lib/cryptsetup/cryptdisks.functions

INITSTATE=&amp;quot;manual&amp;quot;
DEFAULT_LOUD=&amp;quot;yes&amp;quot;

if [ -x &amp;quot;/usr/bin/id&amp;quot; ] &amp;amp;&amp;amp; [ &amp;quot;$(/usr/bin/id -u)&amp;quot;  != &amp;quot;0&amp;quot; ]; then
	log_warning_msg &amp;quot;$0 needs root privileges&amp;quot;
	exit 1
fi

log_action_begin_msg &amp;quot;Stopping crypto disk&amp;quot;
echo &amp;quot;&amp;quot;

count=0
tablen=&amp;quot;$(egrep -vc &amp;quot;^[[:space:]]*(#|$)&amp;quot; &amp;quot;$CRYPTTAB&amp;quot;)&amp;quot;
egrep -v &amp;quot;^[[:space:]]*(#|$)&amp;quot; &amp;quot;$CRYPTTAB&amp;quot; | while read dst src key opts mnt mopts; do
	count=$(( $count + 1 ))
	if [ &amp;quot;$1&amp;quot; = &amp;quot;$dst&amp;quot; ]; then
		umount $mnt

		ret=0
		handle_crypttab_line_stop &amp;quot;$dst&amp;quot; &amp;quot;$src&amp;quot; &amp;quot;$key&amp;quot; &amp;quot;$opts&amp;quot; &amp;lt;&amp;amp;3 || ret=$?
	elif [ $count -ge $tablen ]; then
		ret=1
		device_msg &amp;quot;$1&amp;quot; &amp;quot;failed, not found in user_crypttab&amp;quot;
	else
		continue
	fi
	log_action_end_msg $ret
	exit $ret
done 3&amp;lt;&amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Die beiden Skripte kann nun &lt;code&gt;root&lt;/code&gt; ausführen, um Dateisysteme einzuhängen. Bei jeden einhängen
wird geschaut, ob ein &lt;a href=&#34;http://linux.die.net/man/8/fsck&#34;&gt;fsck&lt;/a&gt; nötig ist.
Mein Dank gilt &lt;a href=&#34;https://blog.meet-unix.org/&#34;&gt;meet-unix&lt;/a&gt;, er hat stand mit mit Rat zu
Seite, da ich noch etwas &lt;em&gt;Solaris&lt;/em&gt;-geschädigt bin.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bilder mit css nicht vergrößern</title>
      <link>http://localhost:1313/post/2011/03/bilder-mit-css-nicht-vergr%C3%B6%C3%9Fern/</link>
      <pubDate>Tue, 01 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2011/03/bilder-mit-css-nicht-vergr%C3%B6%C3%9Fern/</guid>
      <description>&lt;p&gt;
Ich habe in meinen Blog inzwischen auch Bilder und ich nutze die &lt;a href=&#34;http://nextgen-gallery.com/&#34;&gt;NextGEN Gallery&lt;/a&gt;. Aus Platzgründen verkleinere ich die Bilder. Die Bilder, welche im Hochformat sind sehen einfach grausam aus, da sie stark vergrößert werden. Durch den folgenden Hack im &lt;a href=&#34;http://www.w3.org/TR/2002/WD-CSS21-20020802/&#34;&gt;css&lt;/a&gt; werden die Bilder nicht mehr vergrößert. Dazu muss man die Datei &lt;tt&gt;nextgen-gallery/css/nggallery.css&lt;/tt&gt; wie folgt ändern:&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;
.ngg-imagebrowser img {
    border: 1px solid #A9A9A9;
    display: block !important;
    margin: 10px auto;
    max-width: 100%;
    padding: 5px;
}
&lt;/pre&gt;
&lt;p&gt;
Achtung: Die Änderung geht bei einen automatischen Update des Plugins verloren!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Im SunStudio die STL nutzen</title>
      <link>http://localhost:1313/post/2010/11/im-sunstudio-die-stl-nutzen/</link>
      <pubDate>Fri, 26 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2010/11/im-sunstudio-die-stl-nutzen/</guid>
      <description>&lt;p&gt;Mir ist die Tage beim programmieren negativ aufgefallen, dass sich im  Sun Studio 12 Express einige Funktionen anderst sind, als in der STL  spezifiziert. Mir ist es bei &lt;em&gt;std::sort&lt;/em&gt; aufgefallen. Man kann normal &lt;em&gt;sort&lt;/em&gt; eine Funktion übergeben, welche die Elemente vergleicht. Diese  Überladung existiert in der Sun STL nicht. Das ist bekannt und wurde  schon an anderen Stellen diskutiert. Wenn man die STL nutzen möchte,  dann muss man dem Compiler die Option &lt;em&gt;-library=stlport4&lt;/em&gt; mitgeben, dann  wird die standartkonforme STL verwendet.&lt;/p&gt;
&lt;p&gt;Im Sun Studio kann man diese Option unter Additional Options mit angeben.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nutzer anlegen im Active Directory</title>
      <link>http://localhost:1313/post/2010/10/nutzer-anlegen-im-active-directory/</link>
      <pubDate>Wed, 27 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2010/10/nutzer-anlegen-im-active-directory/</guid>
      <description>&lt;p&gt;Ich habe vor einigen Tagen mich mit dem &lt;a href=&#34;http://www.rrzn.uni-hannover.de/fileadmin/it_sicherheit/pdf/SiTaWS05-ActiveDir.pdf&#34;&gt;Active Directory&lt;/a&gt;
beschäftigen müssen. Für mich als Solaris-User ist das eine ganz andere Welt. Deswegen habe ich mich sehr schwer getan,
ohne &lt;a href=&#34;https://meet-unix.org/&#34;&gt;Martin&lt;/a&gt; wär dieser Artikel nicht möglich gewesen. Er stand mir mit Rat und Tat eine
Stunde telefonisch zur Verfügung. Danke noch einmal!&lt;/p&gt;

&lt;p&gt;Nun zu meinen Problem: Ich wollte Nutzer aus einer spool-Datei automatisch in das Active Directory eintragen. Weiterhin mussten die Benutzer in die
&lt;a href=&#34;https://en.wikipedia.org/wiki/Organizational_Unit&#34;&gt;Organizational Unit&lt;/a&gt; &lt;code&gt;peter_lustig_user&lt;/code&gt; verschoben werden. Das anlegen der Nutzer habe ich noch
alleine hinbekommen. Dazu habe ich aus zahlreichen Skripten Codezeilen kopiert. Aber das Verschieben habe ich nicht hinbekommen.
&lt;a href=&#34;https://meet-unix.org/&#34;&gt;Martin&lt;/a&gt;  hat mich auf die Active Directory Tools von Microsoft hingeweisen. Diese fangen alle mit &lt;strong&gt;ds&lt;/strong&gt; an.
Mit &lt;a href=&#34;http://ss64.com/nt/dsquery.html&#34;&gt;dsquery *&lt;/a&gt; habe ich mich durch die Struktur des Active Directory gewühlt. Das grafische Frontend ist zwar
schön, aber da habe ich nicht mitbekommen, aber da weiß ich nicht wie der &lt;a href=&#34;http://www.comptechdoc.org/os/windows/win2k/win2kadname.html&#34;&gt;Distinguished Name&lt;/a&gt; aussieht&amp;hellip;&lt;/p&gt;

&lt;p&gt;Zum Schluss bin ich zu folgen Skript gekommen:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-vb.net&#34;&gt;Set args = WScript.Arguments
profile_pfad = &amp;quot;\odin\homes\%username%\profile&amp;quot;
gruppe_neu = &amp;quot;benutzer&amp;quot;
if args.count &amp;lt;&amp;gt; 1 then
	MsgBox &amp;quot;Es muss genau eine spool-Datei angegeben werden&amp;quot;
	Wscript.quit
End If
Randomize
protokoll = &amp;quot;C:\Dokumente und Einstellungen\Administrator\Desktop\skripte\protokoll.txt&amp;quot;
Set fs = CreateObject(&amp;quot;Scripting.FileSystemObject&amp;quot;)
&#39; Das WScript.Network-Objekt liefert den Namen des Computers
Set net = CreateObject(&amp;quot;WScript.Network&amp;quot;)
&#39; Protokolldatei öffnen
Set output = fs.CreateTextFile(protokoll, True)
&#39;Holt den Namen des Computers aus dem net Objekt
name = net.ComputerName
Set computer = GetObject(&amp;quot;WinNT://&amp;quot; &amp;amp; name)
&#39; Datei öffnen
dateiname = args(0)
If Not fs.FileExists(dateiname) Then
	MsgBox &amp;quot;Die Datei (&amp;quot; &amp;amp; dateiname &amp;amp; &amp;quot;) existiert am angegebenen Ort nicht!&amp;quot;
	WScript.Quit
End If
Set infos = fs.OpenTextFile(dateiname)
&#39; Datei zeilenweise bis zum Ende (atEndOfStream) lesen:
Do Until infos.AtEndOfStream
	&#39; eine Zeile einlesen
	zeile = infos.ReadLine
	&#39; Informationen durch Semikola splitten
	details = Split(zeile, &amp;quot;;&amp;quot;)
	username = Trim(details(0))
	&#39; Konto anlegen
	Set kontoneu = computer.Create(&amp;quot;User&amp;quot;, Trim(details(0)))
	kontoneu.FullName = Trim(details(1))
	kontoneu.Profile = profile_pfad
	&#39; Passwort auslesen, wenn es das default-Passwort ist, dann generiere ein Passwort
	passwort =  Trim(details(2))
	if passwort = &amp;quot;du34!$7_.4-@&amp;quot; then
		passwort = Trim(genPasswort)
		kontoneu.PasswordExpired = CLng(1)
	end if
	kontoneu.SetPassword passwort
	&#39; Ablaufdatum setzten
	if trim(details(3)) &amp;lt;&amp;gt; &amp;quot;never&amp;quot; then
		kontoneu.AccountExpirationDate = Trim(details(3))
	end if
	&#39; Normales Benutzerkonto
	kontoneu.UserFlags = 512
	if not fs.FolderExists(&amp;quot;\odin\homes\&amp;quot; &amp;amp; username) then
		set folder = fs.CreateFolder(&amp;quot;\odin\homes\&amp;quot; &amp;amp; username)
		set folder_files = fs.createfolder(&amp;quot;\odin\homes\&amp;quot; &amp;amp; username &amp;amp; &amp;quot;\files&amp;quot;)
		set folder_profile = fs.createfolder(&amp;quot;\odin\homes\&amp;quot; &amp;amp; username &amp;amp; &amp;quot;\profile&amp;quot;)
		set IShellDispatch2 = CreateObject(&amp;quot;Shell.Application&amp;quot;)
		Call IShellDispatch2.ShellExecute(&amp;quot;C:\skripte\subinacl&amp;quot;, &amp;quot;/file \odin\homes\&amp;quot; &amp;amp; username &amp;amp; &amp;quot; /setowner=&amp;quot; &amp;amp; username, , , 0)
		Call IShellDispatch2.ShellExecute(&amp;quot;c:\skripte\subinacl&amp;quot;, &amp;quot;/subdirectories \odin\homes\&amp;quot; &amp;amp; username &amp;amp; &amp;quot; /setowner=&amp;quot; &amp;amp; username, , , 0)
		Call IShellDispatch2.ShellExecute(&amp;quot;C:\skripte\cacls&amp;quot;, &amp;quot;\odin\homes\&amp;quot; &amp;amp; username &amp;amp; &amp;quot; /T /G Administratoren:F &amp;quot; &amp;amp; username &amp;amp; &amp;quot;:F System:F &amp;lt; echo j&amp;quot;, , , 0)
	end if
	err.clear
	On Error Resume Next
	kontoneu.SetInfo
	if Err.number = 0 then
		WriteLog &amp;quot;Benutzername:  &amp;quot; &amp;amp; username &amp;amp; &amp;quot;   Passwort: &amp;quot; &amp;amp; passwort
		AddToGroup gruppe_neu, kontoneu.ADsPath
		&#39; User in die ou peter_lustig_user verschieben
		set dsMove = CreateObject(&amp;quot;Shell.Application&amp;quot;)
		dsMoveArg = &amp;quot; &amp;quot; &amp;amp; Chr(34) &amp;amp; &amp;quot;CN=&amp;quot; &amp;amp; username &amp;amp; &amp;quot;,CN=Users,DC=w2k8-pool,DC=windows,DC=0rpheus,DC=net&amp;quot; &amp;amp; Chr(34) &amp;amp; _
	                       &amp;quot; -newparent &amp;quot; &amp;amp; Chr(34) &amp;amp; &amp;quot;OU=peter_lustig_user,DC=w2k8-pool,DC=windows,DC=0rpheus,DC=net&amp;quot; &amp;amp; Chr(34)
		Call dsMove.ShellExecute(&amp;quot;dsmove&amp;quot;, dsMoveArg, , ,0)
	else
		if Err.number = -2147022672 then
			WriteLog &amp;quot;Fehler beim Anlegen von &amp;quot; &amp;amp; username &amp;amp; &amp;quot;: Nutzer existiert bereits&amp;quot;
		else
			WriteLog &amp;quot;Fehler beim Anlegen von &amp;quot; &amp;amp; username &amp;amp; &amp;quot;: &amp;quot; &amp;amp; Err.Number
		end if
	end if
	Err.Clear
Loop
&#39; Dateien schließen
infos.Close
output.Close
&#39; Protokoll anzeigen:
&#39;SYS: Microsoft (r) Script Runtime
Set wshshell = CreateObject(&amp;quot;WScript.Shell&amp;quot;)
wshshell.Run &amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;amp; protokoll &amp;amp; &amp;quot;&amp;quot;&amp;quot;&amp;quot;
Sub AddToGroup(gruppenname, kontoname)
	On Error Resume Next
	Set gruppe = GetObject(&amp;quot;WinNT://&amp;quot; &amp;amp; ComputerName &amp;amp; &amp;quot;/&amp;quot; &amp;amp; gruppenname &amp;amp; &amp;quot;,group&amp;quot;)
	gruppe.Add kontoname
	gruppe.SetInfo
	If Err.number = 0 Then
		&#39;WriteLog &amp;quot;Konto ist Mitglied in Gruppe &amp;quot; &amp;amp; gruppenname
	Else
		&#39;WriteLog &amp;quot;Konto konnte nicht zum Mitglied in Gruppe &amp;quot; &amp;amp; gruppenname &amp;amp; &amp;quot; gemacht werden.&amp;quot;
	End If
	Err.Clear
End Sub

Sub WriteLog(text)
	&#39; eine Zeile ins Protokoll schreiben und Leerzeile einfügen
	output.WriteLine text &amp;amp; vbCrLf &amp;amp; vbCrLf
End Sub

function genPasswort()
	password = &amp;quot;&amp;quot;
	for i=1 to 12
		if Int(100*Rnd mod 2 ) = 1 then
			password = password &amp;amp; chr(Int(61*Rnd+33))
		else
			password = password &amp;amp; chr(Int(29*Rnd+97))
		end if
	next
	genPasswort = password
end function
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Der AD-Guru oder Windows-Hardcore User wird sicher sagen, wie dumm ist das denn, das geht in einen 3-Zeiler.
Aber ich kann kein Windows und will es eigentlich auch nicht lernen :P Wenn ich Zeit hätte wüsste ich wie man
mit den &lt;code&gt;ds&lt;/code&gt;&lt;em&gt;-Tools das ganze schöner machen könnte. Ich habe das komplette Skript hier rein gestellt, da
man sicher die ein oder andere Zeile klauen kann *g&lt;/em&gt;. Der Passwortgenerator ist schlecht,
es war aber die schnellste Lösung.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>&#34;Sichere&#34; Captchas programmieren</title>
      <link>http://localhost:1313/post/2010/08/sichere-captchas-programmieren/</link>
      <pubDate>Wed, 18 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2010/08/sichere-captchas-programmieren/</guid>
      <description>&lt;p&gt;
Man möchte manchmal Teile seiner Seite mittels Captchas schützen. Es gibt zahlreiche fertige Varianten, auch für wordpress. Diese haben fast immer den Nachteil, dass sie &lt;a href=&#34;http://de.wikipedia.org/wiki/JavaScript&#34;&gt;JavaScript&lt;/a&gt;, &lt;a href=&#34;http://www.adobe.com/support/documentation/de/flash/&#34;&gt;Flash&lt;/a&gt;, oder &lt;a href=&#34;http://www.w3.org/TR/WD-session-id&#34;&gt;Sessions&lt;/a&gt; benutzen. Persönlich habe ich eine Abneigung gegen &lt;a href=&#34;http://de.wikipedia.org/wiki/JavaScript&#34;&gt;JavaScript&lt;/a&gt; und &lt;a href=&#34;http://www.adobe.com/support/documentation/de/flash/&#34;&gt;Flash&lt;/a&gt;. &lt;a href=&#34;http://www.w3.org/TR/WD-session-id&#34;&gt;Sessions&lt;/a&gt; lassen sich nicht immer nachträglich nutzen und man erzeugt serverseitig etwas Last. Fakt ist, dass ich keine Sessions mag! Das schlimmste an fertigen Captcha-Lösungen ist der zum Teil invalide html-Code. Ich möchte validen &lt;a href=&#34;http://www.w3.org/TR/xhtml1/&#34;&gt;xhtml 1.0 strict&lt;/a&gt;-Code haben und das Captcha sollte in mein Design passen. Wenn man die ganzen Anforderungen erfüllt haben möchte, so muss man wohl oder übel sein Captcha selbst programmieren.&lt;/p&gt;
&lt;h2&gt;Wie komme ich zum sicheren Captcha&lt;/h2&gt;
&lt;p&gt;Wenn ich auf Sessions verzichten möchte, so muss ich die Lösung des Captcha mit auf die Seite schreiben. Das kann man in einen &lt;em&gt;nicht sichtbaren&lt;/em&gt; Feld machen. Damit man dieses Feld nicht so einfach auslesen kann, schreibt man einen &lt;a href=&#34;http://burtleburtle.net/bob/hash/index.html&#34;&gt;Hash&lt;/a&gt; hinein bzw. man verschlüsselt den Inhalt.&lt;/p&gt;
&lt;pre lang=&#34;php&#34; line=&#34;1&#34;&gt;
define(KEY, &#34;Ich bin ein Key&#34;);
define(IV, &#34;KlyV6gxG3MOPzlfuj8azF6sKKTnsdsiN58i0zjHA0EU=&#34;);

function Crypt($plaintext){
    $td = mcrypt_module_open(&#39;rijndael-256&#39;, &#39;&#39;, &#39;ofb&#39;, &#39;&#39;);

    $iv = base64_decode(IV);
    $ks = mcrypt_enc_get_key_size($td);

     /* Create key */
    $key = substr(md5(KEY), 0, $ks);

    /* Intialize encryption */
    mcrypt_generic_init($td, $key, $iv);

    /* Encrypt data */
    $encrypted = mcrypt_generic($td, $plaintext);

    /* Terminate decryption handle and close module */
    mcrypt_generic_deinit($td);
    mcrypt_module_close($td);

    return base64_encode($encrypted);
}

function Decrypt($chiffre){
    $td = mcrypt_module_open(&#39;rijndael-256&#39;, &#39;&#39;, &#39;ofb&#39;, &#39;&#39;);

    $iv = base64_decode(IV);
    $ks = mcrypt_enc_get_key_size($td);

     /* Create key */
    $key = substr(md5(KEY), 0, $ks);

    $chiffre = base64_decode($chiffre);
    mcrypt_generic_init($td, $key, $iv);
    $plaintext = mdecrypt_generic($td, $chiffre);

    mcrypt_generic_deinit($td);
    mcrypt_module_close($td);

    return $plaintext;
}

function draw_captcha_form(){
    .....
    $time = time() + 60*30;
    $captchaSolution = &#34;Test&#34;
    echo &#34;\t\n\tBitte Captcha lösen&lt;br /&gt;\n&#34;;
    // erzeuge ein Captcha
    echo &#34;\t\n&#34;;
    echo &#34;\t&#34; . &#39;
&lt;input name=&#34;captvalue&#34; id=&#34;captvalue&#34; value=&#34;&#34; size=&#34;40&#34; tabindex=&#34;4&#34; type=&#34;text&#34; /&gt;&#39; . &#34;\n&#34;;
    echo &#34;\t&#34;    . &#39;
&lt;input name=&#34;captcha&#34; value=&#34;&#39;. Crypt($time . &#34;~&#34; . $captchaSolution . &#34;~&#34; . $REMOTE_ADDR) . &#39;&#34; type=&#34;hidden&#34;/&gt;&#39; . &#34;\n&#34;;
}

function check_post($) {
    ....
    $captcha = $_POST[&#39;captvalue&#39;];
    list($timeOld, $secret, $addr) = explode(&#39;~&#39;,Decrypt($_POST[&#39;captcha&#39;]));
    ....
    if($timeOld &lt;= time()){
            echo &#34;Deine Zeit ist abgelaufen&#34;;
            return;
    }
    if($addr != $REMOTE_ADDR){
            echo &#34;Falsche IP&#34;;
            return;
    }
    if($secret != $captcha){
            echo &#34;Falsches Captcha&#34;;
            return;
    }
    .....
}
&lt;/pre&gt;
&lt;p&gt;
Mit diesen Ideen kann man sich nun sein eigenes Captcha zusammen bauen. Ich generiere z.B. Matheaufgaben.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shared memory Allocator mit der STL</title>
      <link>http://localhost:1313/post/2010/08/shared-memory-allocator-mit-der-stl/</link>
      <pubDate>Wed, 18 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2010/08/shared-memory-allocator-mit-der-stl/</guid>
      <description>&lt;p&gt;
Ich habe mich die letzten Tage mit der &lt;a href=&#34;http://www.cplusplus.com/reference/stl/&#34;&gt;STL&lt;/a&gt; herungeärgert. Ich wollte einen Allocator schreiben, welcher mir die STL-Container in ein Shared Memory Segment legt. Ich habe es nicht wirklich hinbekommen. Inzwischen weiß ich, dass es die Leute von &lt;a href=&#34;http://www.boost.org/&#34;&gt;boost&lt;/a&gt; auch nicht hinbekommen haben. Aus diesem Grund werde ich nun &lt;a href=&#34;http://www.boost.org/&#34;&gt;boost&lt;/a&gt; benutzen und hoffen, dass die Performance nicht zu schlecht (unter &lt;a href=&#34;http://www.microsoft.com/germany/windows/&#34;&gt;Windows&lt;/a&gt;) ist. Das geheimnis ist, dass man die Container nach implementiert und die Implementierung kommt arbeitet korrekt in einem Shared Memory Segment.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>