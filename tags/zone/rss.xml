<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zone on Michael im Netz</title>
    <link>https://0rph3us.github.io/tags/zone/</link>
    <description>Recent content in Zone on Michael im Netz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language>
    <copyright>Diese Seite ist unter der &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt; lizenziert.</copyright>
    <lastBuildDate>Thu, 22 Apr 2010 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://0rph3us.github.io/tags/zone/rss/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Eigenschaften von Zonen</title>
      <link>https://0rph3us.github.io/post/2010/04/eigenschaften-von-zonen/</link>
      <pubDate>Thu, 22 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://0rph3us.github.io/post/2010/04/eigenschaften-von-zonen/</guid>
      <description>&lt;p&gt;
Ich wurde in Bezug auf diesen &lt;a href=&#34;http://0rpheus.net/solaris/eine-zone-in-10-minuten&#34;&gt;Blog-Eintrag&lt;/a&gt; gefragt, was es f&amp;uuml;r Zoneneigenschaften gibt, welche man f&amp;uuml;r Regelmentierungen verwenden kann.&lt;/p&gt;
&lt;p&gt;
Als ersten m&amp;ouml;chte ich zeigen, wie man den Hauptspeicher limitieren kann. &lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;
root@global$ zonecfg -z myzone
zonecfg:myzone&gt; add capped-memory
zonecfg:myzone:capped-memory&gt; set physical=500m
zonecfg:myzone:capped-memory&gt; set swap=1g
zonecfg:myzone:capped-memory&gt; set locked=100m
zonecfg:myzone:capped-memory&gt; end
zonecfg:myzone&gt; exit
&lt;/pre&gt;
&lt;dl&gt;
&lt;dt&gt;physical&lt;/dt&gt;
&lt;dd&gt;
     Hierbei handelt es sich um eine Limitierung des physischen Hauptspeicher. Wenn mehr Speicher angefordert wird, dann kann dieser ausgelagert werden.&lt;br /&gt;
     Eine Zone kann diesen Wert &amp;uuml;berschreiten und mehr Speicher anfordern.
  &lt;/dd&gt;
&lt;dt&gt;swap&lt;/dt&gt;
&lt;dd&gt;
      Das ist eine Begrenzung des virtuellen Speicher, d.h. eine Zone kann nicht mehr Speicher anfordern. Wenn ein Prozess in der Zone mehr Speicher anfordert, so    schl&amp;auml;gt diese Speicheranforderung fehl.
   &lt;/dd&gt;
&lt;dt&gt;locked&lt;/dt&gt;
&lt;dd&gt;
     Der allokierte Speicher ein Zone kann bis auf diesen Wert ausgelagert werden
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
Neben dem Hauptspeicher kann man auch die CPUs regelmentieren. Man dedizierter CPUs zuweisen oder das Scheduling ver&amp;auml;ndern. &lt;a href=&#34;http://docs.sun.com/app/docs/doc/817-1592/rmfss-4?l=en&amp;a=view&#34;&gt;Hier&lt;/a&gt; gibt eine gute &amp;Uuml;bersicht, bzgl. der Definition der CPU Shares.&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;
root@global$ zonecfg -z myzone
zonecfg:myzone&gt; add dedicated-cpu
zonecfg:myzone:dedicated-cpu&gt; set ncpus=1-4
zonecfg:myzone:dedicated-cpu&gt; end
zonecfg:myzone&gt; exit
&lt;/pre&gt;
&lt;p&gt;Was passiert nun?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Beim booten der Zone werden die CPUs 1-4 werden aus dem default-Pool entfernt&lt;/li&gt;
&lt;li&gt;Es wird ein tempor&amp;auml;er Pool erstellt mit den CPUs 1-4&lt;/li&gt;
&lt;li&gt;Beim stoppen der Zone werden die CPUs 1-4 wieder dem default-Pool zur verf&amp;uuml;gung gestellt.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Man kann auch sagen, dass eine Zone z.B. maximal 2,5 CPUs benutzen kann. Das sieht wie folgt aus:&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;
root@global$ zonecfg -z myzone
zonecfg:myzone&gt; add capped-cpu
zonecfg:myzone:capped-cpu&gt; set ncpus=2.5
zonecfg:myzone:capped-cpu&gt; end
zonecfg:myzone&gt; exit
&lt;/pre&gt;
&lt;p&gt;Nun m&amp;ouml;chte ich zeigen, wie man eine Zone 200 CPU-Shares und die FSS (Fair Share Scheduling) Klasse zuweist&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;
root@global$ zonecfg -z myzone
zonecfg:myzone&gt; set cpu-shares=200
zonecfg:myzone&gt; set scheduling-class=FSS
zonecfg:myzone&gt; exit
&lt;/pre&gt;
&lt;p&gt;Als letztes Quota zum Thema CPU m&amp;ouml;chte ich zeigen, wie man die Anzahl der Threads/Prozesse begrenzt. Die folgende Zone kann maximal 250 Threads ausf&amp;uuml;hren. Ein einzelner Prozess ohne Thredas z&amp;auml;hlt als ein Thread.&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;
root@global$ zonecfg -z myzone
zonecfg:myzone&gt; add rctl
zonecfg:myzone:rctl&gt; set name=zone.max-lwps
zonecfg:myzone:rctl&gt; add value (priv=privileged,limit=250,action=deny)
zonecfg:myzone:rctl&gt; end
&lt;/pre&gt;
&lt;p&gt;Man kann auf diese Weise auch noch andere Resourcen kontrollieren. &lt;a href=&#34;http://docs.sun.com/app/docs/doc/820-2316/rmctrls-1?l=de&amp;a=view&#34;&gt;Hier&lt;/a&gt; findet man eine &amp;Uuml;bersicher &amp;uuml;ber die Resource Controls&lt;/p&gt;
&lt;p&gt;F&amp;uuml;r Zonen kann es auch interssant sein, den Plattenpatz zu begrenzen. Da in Open Solaris zfs das default-Dateisystem ist, kann man Quotas und Reservations &amp;uuml;ber die entsprechenden zfs-Eigenschaften machen. Die Wurzel der Zone liegt auf dem Dateisystem &lt;tt&gt;zones/myzone&lt;/tt&gt;&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;
root@global$ zonecfg -z myzone zfs set quota=10g zones/myzone
root@global$ zonecfg -z myzone zfs set reservation=5g zones/myzone
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Eine Zone in 10 Minuten</title>
      <link>https://0rph3us.github.io/post/2010/04/eine-zone-in-10-minuten/</link>
      <pubDate>Thu, 15 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://0rph3us.github.io/post/2010/04/eine-zone-in-10-minuten/</guid>
      <description>&lt;p&gt;Ich kam gestern in die Verlegenheit mal schnell eine Zone aufsetzten zu müssen. Ich dachte mir, wenn ich das mal schnell mache, dann wenigsten mit RAM-Quota und CPU-Begrenzung. Es kann evtl. sein, dass man &lt;tt&gt;pkg:/service/resource&lt;/tt&gt; installieren muss. Dieses Paket ist f&amp;uuml;r die Verwaltung von RAM-Resourcen zust&amp;auml;ndig.&lt;/p&gt;
&lt;p&gt;Ressourcenpools anstellen&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ % pfexec pooladm -e
&lt;/pre&gt;
&lt;p&gt;Aktuelle Konfiguration in der &lt;tt&gt;/etc/pooladm.conf&lt;/tt&gt; sichern&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ % pfexec pooladm -s
&lt;/pre&gt;
&lt;p&gt;Nun erstellen wir einen Pool mit einem CPU-Set, welches über maximal 2 CPUs verfügt&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ % pfexec poolcfg -c &#39;create pset zone-pset (uint pset.min=1; uint pset.max=2)&#39;
rennecke@walhalla ~ % pfexec poolcfg -c &#39;create pool zone-pool&#39;
rennecke@walhalla ~ % pfexec poolcfg -c &#39;associate pool zone-pool (pset zone-pset)&#39;
&lt;/pre&gt;
&lt;p&gt;Als nächstes aktivieren wir die Konfiguration und speichern sie&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ % pfexec pooladm -c
rennecke@walhalla ~ % pfexec pooladm -s
rennecke@walhalla ~ % pfexec pooladm

system default
	string	system.comment
	int	system.version 1
	boolean	system.bind-default true
	string	system.poold.objectives wt-load

	pool zone-pool
		int	pool.sys_id 1
		boolean	pool.active true
		boolean	pool.default false
		int	pool.importance 1
		string	pool.comment
		pset	zone-pset

	pool pool_default
		int	pool.sys_id 0
		boolean	pool.active true
		boolean	pool.default true
		int	pool.importance 1
		string	pool.comment
		pset	pset_default

	pset zone-pset
		int	pset.sys_id 1
		boolean	pset.default false
		uint	pset.min 1
		uint	pset.max 2
		string	pset.units population
		uint	pset.load 5
		uint	pset.size 2
		string	pset.comment 

		cpu
			int	cpu.sys_id 1
			string	cpu.comment
			string	cpu.status on-line

		cpu
			int	cpu.sys_id 0
			string	cpu.comment
			string	cpu.status on-line

	pset pset_default
		int	pset.sys_id -1
		boolean	pset.default true
		uint	pset.min 1
		uint	pset.max 65536
		string	pset.units population
		uint	pset.load 562
		uint	pset.size 2
		string	pset.comment 

		cpu
			int	cpu.sys_id 3
			string	cpu.comment
			string	cpu.status on-line

		cpu
			int	cpu.sys_id 2
			string	cpu.comment
			string	cpu.status on-line
&lt;/pre&gt;
&lt;p&gt;Nun kommen wir zum eigenlichen erstellen der Zone&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;
rennecke@walhalla ~ % pfexec zonecfg -z zone1
zone1: No such zone configured
Use &#39;create&#39; to begin configuring a new zone.
zonecfg:zone1&gt; create
zonecfg:zone1&gt; set zonepath=/export/zone/zone1
zonecfg:zone1&gt; set autoboot=true
zonecfg:zone1&gt; add net
zonecfg:zone1:net&gt; set address=192.168.1.10/24
zonecfg:zone1:net&gt; set physical=rge0
zonecfg:zone1:net&gt; set defrouter=192.168.1.1
zonecfg:zone1:net&gt; end
zonecfg:zone1&gt; set pool=zone-pool
zonecfg:zone1&gt; add capped-memory
zonecfg:zone1:capped-memory&gt; set physical=200m
zonecfg:zone1:capped-memory&gt; set swap=400m
zonecfg:zone1:capped-memory&gt; set locked=30m
zonecfg:zone1:capped-memory&gt; end
zonecfg:zone1&gt; verify
zonecfg:zone1&gt; commit
zonecfg:zone1&gt; exit
&lt;/pre&gt;
&lt;p&gt;Ich denke, dass sich alles von selbst erkl&amp;auml;rt, wenn jedmand Fragen hat, dann bitte einen Kommentar bzw. die Manpage lesen. Als nächsten Schritt installieren wir die Zone und booten sie anschlie&amp;szlig;end.&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;
rennecke@walhalla ~ % pfexec zoneadm -z zone1 install
A ZFS file system has been created for this zone.
   Publisher: Using opensolaris.org (http://pkg.opensolaris.org/dev/ ).
   Publisher: Using pending (http://pkg.opensolaris.org/pending/).
   Publisher: Using contrib.opensolaris.org (http://pkg.opensolaris.org/contrib/).
       Image: Preparing at /export/zone/zone1/root.
       Cache: Using /var/pkg/download.
Sanity Check: Looking for &#39;entire&#39; incorporation.
  Installing: Core System (output follows)
DOWNLOAD                                  PKGS       FILES    XFER (MB)
Completed                                44/44 12305/12305    85.9/85.9 

PHASE                                        ACTIONS
Installationsphase                       17833/17833
Für dieses Abbild sind keine Updates erforderlich.
  Installing: Additional Packages (output follows)
DOWNLOAD                                  PKGS       FILES    XFER (MB)
Completed                                36/36   3233/3233    20.6/20.6 

PHASE                                        ACTIONS
Installationsphase                         4329/4329 

        Note: Man pages can be obtained by installing SUNWman
 Postinstall: Copying SMF seed repository ... done.
 Postinstall: Applying workarounds.
        Done: Installation completed in 606,736 seconds.

  Next Steps: Boot the zone, then log into the zone console (zlogin -C)
              to complete the configuration process.
&lt;/pre&gt;
&lt;p&gt;Die Geschwindigkeit zum erstellen der Zone h&amp;auml;ngt von der Downloadgewindigkeit maßgeblich ab. Wenn man Pech hat, wartet man sehr lange auf die 100 MB...&lt;/p&gt;
&lt;p&gt;Nachdem nun die Zone installiert ist m&amp;uuml;ssen wir sie nur noch booten und initial konfigurieren&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;
rennecke@walhalla ~ % pfexec zoneadm -z zone1 boot
rennecke@walhalla ~ % pfexec zlogin -C zone1
[Connected to zone &#39;zone1&#39; console]

You did not enter a selection.
What type of terminal are you using?
 1) ANSI Standard CRT
 2) DEC VT100
 3) PC Console
 4) Sun Command Tool
 5) Sun Workstation
 6) X Terminal Emulator (xterms)
 7) Other
Type the number of your choice and press Return: 2
&lt;/pre&gt;
&lt;p&gt;Es ist sehr zu empfehlen f&amp;uuml;r die Konfiguration ein VT100 Terminal zu nehmen. Das ich zwar nicht sch&amp;ouml;n, aber man kann auj &lt;strong&gt;jeder&lt;/strong&gt; Konsole ordentlich arbeiten, ohne das was verschoben wird.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zonen retten</title>
      <link>https://0rph3us.github.io/post/2010/02/zonen-retten/</link>
      <pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://0rph3us.github.io/post/2010/02/zonen-retten/</guid>
      <description>&lt;p&gt;Ich habe mir vor einigen Wochen meine Systemplatten zerstört. Das hat mich noch nicht sonderlich gestört. Denn man kann OpenSolaris sehr schnell wieder installieren. Von den ganzen Konfigurationen hatte ich ein Backup. Ein kleineres Problem hatte ich mit den Zonen. Sie ließen sich nicht ohne weiteres im neuen System importieren. Ein möglicher Grund ist, dass ich sie nicht detachet hatte und die Zoneroots hatte ich auch nicht mehr.&lt;br /&gt;
 Der Fehler hat sich wie folgt geäußert:&lt;/p&gt;
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ $ pfexec zoneadm -z test attach -u
Log File: /var/tmp/test.attach_log.KvayPK
ERROR: no active dataset.
rennecke@walhalla ~ $ pfexec zoneadm -z test attach
Log File: /var/tmp/test.attach_log.X4aOcK
ERROR: no active dataset.
rennecke@walhalla ~ $ pfexec cat /var/tmp/test.attach_log.X4aOcK
[Montag, 15. Februar 2010, 12:45:18 Uhr CET] Log File: /var/tmp/test.attach_log.X4aOcK
[Montag, 15. Februar 2010, 12:45:18 Uhr CET] ERROR: no active dataset.&lt;/pre&gt;
&lt;p&gt;Also habe ich etwas gebastelt und habe die Zonen wieder importiert.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Das Backup von &lt;tt&gt;/etc/zones&lt;/tt&gt; eingespielt&lt;/li&gt;
&lt;li&gt;Den zpool mit den zonen importiert, mit der Option &lt;strong&gt;-f&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt; ID des Parent Bootenvironment auslesen:
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ $ zfs get -r org.opensolaris.libbe:uuid rpool/ROOT
...                                  -
rpool/ROOT/opensolaris          org.opensolaris.libbe:uuid  642ced7d-55a2-cc3b-fbdf-fbdda1c33ebc  local
...&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt; Das höchste Bootenvironment der Zone bestimmen. Das ist die höchste Nummer:
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ $ zfs get -r org.opensolaris.libbe:parentbe
...
daten/zone/test/ROOT/zbe-10                      org.opensolaris.libbe:parentbe  5741bca6-d793-454e-ad53-84c2cf7c630b  local
...&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt; ID des Parent Bootenvironment setzten:
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ $ pfexec zfs set org.opensolaris.libbe:parentbe=642ced7d-55a2-cc3b-fbdf-fbdda1c33ebc daten/zone/test/ROOT/zbe-10&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Status der Zone in der Datei &lt;tt&gt;/etc/zones/index&lt;/tt&gt; auf &lt;strong&gt;configured&lt;/strong&gt; setzten&lt;/li&gt;
&lt;li&gt;Zone neu installieren:
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ $ pfexec zoneadm -z test install&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt; Testen, ob die Zone sich &lt;strong&gt;nicht&lt;/strong&gt; booten lässt:
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ $ pfexec zoneadm -z test boot&lt;/pre&gt;
&lt;p&gt;Es sollte ein Fehler kommen, dass es mehrere aktive Datasets gibt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Das neu angelegte Bootenvironment der Zone löschen:
&lt;pre lang=&#34;bash&#34;&gt;rennecke@walhalla ~ $ pfexec zfs destroy daten/zone/test/ROOT/zbe-11&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Fertig, nun kann man die Zone wieder normal booten&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Diese Unschönheit kommt bei Solaris 10 nicht vor. Es kann sein, dass sie auch nur bei den, von mir verwendten Build 131 vorkommt. Man sollte bei dieser Bastelei wissen was man tut, also bitte nicht wild darauf los tippen, wenn ihr den selben Fehler habt.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hotplug von Devices in Zonen</title>
      <link>https://0rph3us.github.io/post/2009/09/hotplug-von-devices-in-zonen/</link>
      <pubDate>Sat, 05 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://0rph3us.github.io/post/2009/09/hotplug-von-devices-in-zonen/</guid>
      <description>&lt;p&gt;Manchmal ist erforderlich, dass man einer Zone den Zugriff auf ein Device gewährt. Ich habe z.B. einer Zone mein
externes LTO-2 Bandlaufwerk gegeben. Dieses ist über &lt;a href=&#34;http://de.wikipedia.org/wiki/Small_Computer_System_Interface&#34;&gt;SCSI&lt;/a&gt;
mit dem Rechner verbunden. Da ich Strom sparen möchte und &lt;a href=&#34;http://de.wikipedia.org/wiki/Small_Computer_System_Interface&#34;&gt;SCSI&lt;/a&gt;
&lt;a href=&#34;http://de.wikipedia.org/wiki/Hot_Swapping&#34;&gt;hotplugfähig&lt;/a&gt; ist, schalte ich das Bandlaufwerk nur ein wenn ich es benötige.&lt;/p&gt;

&lt;p&gt;Damit man das Device unter Solaris in der global-Zone ansprechen kann, muss es wie folgt einbinden (mein Laufwerk ist an Controller c17 angeschlossen):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cfgadm -c configure c17
root@walhalla ~ $ cfgadm -a c17
p_Id                          Type         Receptacle   Occupant     Condition
c17                            scsi-bus     connected    configured   unknown
c17::rmt/0                     tape         connected    configured   unknown
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wenn man in einer nonglobal-Zone ist geht dieses Verfahren nicht. Solaris sagt aber einen woran es liegt:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cfgadm: Configuration administration not supported: cfgadm can only be run from the global zone
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Also muss man Devices, die eine nonglobal-Zone benötigt &lt;strong&gt;immer&lt;/strong&gt; in der global-Zone
einbinden bzw. tauschen. Ich vertrete die Auffassung, das man in einer nonglobal-Zone,
so weit es möglich ist, keine Devices gibt. Das kann unter Umständen zu Probleme
bei der Migration der Zonen führen.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>